{"version":3,"sources":["components/MediaCard/MediaCard.js","components/CardsList.js","components/SearchBox/SearchBox.js","components/ScrollUp.js","containers/App/App.js","serviceWorker.js","index.js"],"names":["withStyles","card","maxWidth","margin","opacity","typography","fontSize","props","classes","react_default","a","createElement","Card_default","className","CardActionArea_default","CardContent_default","Typography_default","style","borderBottom","padding","gutterBottom","variant","align","component","name","height","mass","hair_color","skin_color","birth_year","CardActions_default","Button_default","size","color","CardsList","_ref","cards","Grid_default","container","direction","justify","alignItems","map","_ref2","item","xs","sm","md","lg","xl","components_MediaCard_MediaCard","key","theme","textField","marginLeft","spacing","unit","marginRight","marginBottom","backgroundColor","outline","display","flexWrap","justifyContent","noValidate","autoComplete","TextField_default","id","label","placeholder","fab","react_scroll_up_default","zIndex","bottom","right","easing","duration","showUnder","Fab_default","aria-label","ArrowUpward_default","App","state","people","searchField","_this2","this","Promise","all","Object","asyncToGenerator","regenerator_default","mark","_callee","url","response","morePlanets","combinedArrayOfPlanets","sortedArrayOfPlanets","wrap","_context","prev","next","fetch","sent","json","push","results","flat","sort","b","localeCompare","setState","stop","_x","apply","arguments","catch","error","alert","react","components_ScrollUp","fontFamily","marginTop","textShadow","components_SearchBox_SearchBox","components_CardsList","Component","Boolean","window","location","hostname","match","ReactDOM","render","containers_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1fc0288b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './MediaCard.css'\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst styles = {\r\n  card: {\r\n    maxWidth: 345,\r\n    margin: 12,\r\n    opacity: 0.9 \r\n  },\r\n  typography:{\r\n    fontSize: 17.5,\r\n  }\r\n};\r\n\r\nconst MediaCard = props => {\r\n    const { classes } = props;\r\n    return (\r\n      <Card className={classes.card}>\r\n        <CardActionArea>\r\n          <CardContent>\r\n            <Typography style={{borderBottom: '0.5px solid grey', padding: 5}} gutterBottom variant='h5' align='center' component='h5'>\r\n              <strong>{props.name}</strong>\r\n            </Typography>\r\n            <Typography className={classes.typography} align='center'>\r\n              Height: {props.height}  \r\n            </Typography>\r\n            <Typography className={classes.typography} align='center'>\r\n              Mass: {props.mass} \r\n            </Typography>\r\n            <Typography className={classes.typography} align='center'>\r\n              Hair Color: {props.hair_color}  \r\n            </Typography>\r\n            <Typography className={classes.typography} align='center'>\r\n              Skin Color: {props.skin_color} \r\n            </Typography>\r\n            <Typography className={classes.typography} align='center'>\r\n              Birth Year: {props.birth_year} \r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n        <CardActions>\r\n          <Button style={{margin: 'auto'}} size='small' color='primary'>\r\n            Learn More\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    );\r\n}\r\n\r\nMediaCard.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(MediaCard);\r\n","import React from 'react'\r\nimport MediaCard from './MediaCard/MediaCard'\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst CardsList = ({ cards }) => {\r\n  \r\n  return (\r\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n        {cards.map(({name, height, mass, hair_color, skin_color, birth_year})  => {\r\n          return ( \r\n          <Grid item xs={8} sm={5} md={4} lg={3} xl={2}>\r\n            <MediaCard \r\n              key={name}\r\n              name={name}\r\n              height={height}\r\n              mass={mass} \r\n              hair_color={hair_color}\r\n              skin_color={skin_color}\r\n              birth_year={birth_year}  \r\n            />\r\n          </Grid> \r\n           )\r\n         }) \r\n        }\r\n      </Grid>\r\n  )\r\n}\r\n\r\nexport default CardsList\r\n","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport './SearchBox.css'\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n    marginBottom: 35,\r\n    backgroundColor: '#CDECFF',\r\n    opacity: 0.95,\r\n    outline: 'none'\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n\r\nconst SearchBox = props => {  \r\n  const { classes } = props;\r\n  return (\r\n    <form className={classes.container} noValidate autoComplete=\"off\">\r\n      <TextField\r\n          id=\"outlined-with-placeholder search\"\r\n          label=\"Search Characters...\"\r\n          placeholder=\"Search...\"\r\n          className={classes.textField}\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n        />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default withStyles(styles)(SearchBox);\r\n","import React from 'react'\r\nimport ScrollToTop from 'react-scroll-up'\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward' \r\n\r\nconst styles = theme => ({\r\n  fab: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n});\r\n\r\n\r\nconst ScrollUp = (props) => {\r\n  const { classes } = props;\r\n  return (\r\n    <ScrollToTop style={{zIndex: 9999, bottom: 15, right: 20}} easing=\"easeInOutCirc\" duration={350} showUnder={130}>\r\n       <Fab color=\"primary\" aria-label=\"Add\" className={classes.fab}>\r\n         <ArrowUpward />\r\n       </Fab>\r\n    </ScrollToTop>\r\n  )\r\n}\r\n\r\nexport default withStyles(styles)(ScrollUp)\r\n","import React, { Component, Fragment } from 'react'\nimport './App.css'\nimport CardsList from '../../components/CardsList'\nimport SearchBox from '../../components/SearchBox/SearchBox'\nimport Typography from '@material-ui/core/Typography';\nimport ScrollUp from '../../components/ScrollUp';\n\nclass App extends Component {\n  state = {\n    people: [],\n    searchField: ''\n  }\n\n  componentDidMount() {\n    const urls = [\n      'https://swapi.co/api/people/',\n\t\t\t'https://swapi.co/api/people/?page=2', \n\t\t\t'https://swapi.co/api/people/?page=3',\n\t\t\t'https://swapi.co/api/people/?page=4',\n\t\t\t'https://swapi.co/api/people/?page=5',\n    ]\n    // const firstUrl = fetch('https://swapi.co/api/people/').then(res => res.json())\n    // const secondUrl = fetch('https://swapi.co/api/people/?page=2').then(res => res.json())\n    //  Promise.all([firstUrl, secondUrl])\n    //   .then(data => data.map(url => {\n    //     console.log(url.results)\n    //     this.setState({\n    //       people:url.results\n    //     })\n    //   }))\n\n    Promise.all(urls.map(async url => {\n      const response = await fetch(url);\n      const morePlanets = await response.json();\n      let combinedArrayOfPlanets = this.state.people;\n      combinedArrayOfPlanets.push(morePlanets.results);\n      \n      let sortedArrayOfPlanets = combinedArrayOfPlanets\n        .flat()\n        .sort((a, b) => a.name.localeCompare(b.name));\n      \n      this.setState({people: sortedArrayOfPlanets})\n    }))\n    .catch(error => \n      alert('Something went wrong:', error)\n    );\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <ScrollUp />\n        <Typography style={{fontFamily:'StarWars', color:'#f0f0f0', fontSize: 80, marginTop: 40}} align='center' variant=\"h1\" gutterBottom>\n          Star Wars\n        </Typography>\n        <Typography style={{\n          fontFamily:'StarWars2', \n          color:'black', \n          fontSize: 45, \n          marginBottom: 105,\n          textShadow: '-2px 0 white, 0 2px white, 2px 0 white, 0 -2px white'\n          }} \n          align='center' variant=\"h1\" gutterBottom>\n          The Characters\n        </Typography>\n        <SearchBox />\n        <CardsList cards={this.state.people}/>\n      </Fragment>\n      \n    )\n  }\n}\n\nexport default App\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App/App'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}